Zadatak: Full-Stack WordPress integracija edukativne web aplikacije

0. INICIJALNA ARHITEKTURALNA ODLUKA:
- Odaberi optimalan pristup implementaciji:
  * Opcija A: Potpuna WordPress integracija (za jednostavnije aplikacije)
  * Opcija B: Headless WordPress s React/Vue frontend-om (za kompleksnije aplikacije)
  * Opcija C: Hibridni pristup (WordPress template + moderne JS tehnologije)

1. FRONTEND ARHITEKTURA:
A. JavaScript Modernizacija:
   - Odluči između:
     * Vanilla JS s modulima (ES6+)
     * React/Vue komponente
     * Alpine.js za lagane interakcije
   - Implementiraj state management:
     * Context API / Redux / Vuex
     * Custom state manager
   - Dodaj build proces:
     * Webpack / Vite konfiguracija
     * Babel za transpilaciju
     * PostCSS / SASS procesiranje

B. CSS Arhitektura:
   - Implementiraj metodologiju:
     * BEM
     * SMACSS
     * Utility-First (Tailwind)
   - Postavi CSS varijable za temu:
     * Boje
     * Tipografija
     * Spacing
     * Breakpoints
   - Riješi CSS izolaciju:
     * CSS Modules
     * Scoped styles
     * Shadow DOM ako je potrebno

2. BACKEND ARHITEKTURA:
A. WordPress Data Layer:
   - Custom Post Types:
     ```php
     register_post_type('math_exercise', [
       'supports' => ['title', 'editor', 'custom-fields'],
       'show_in_rest' => true,
       'rest_base' => 'math-exercises',
     ]);
     ```
   - Custom Taxonomies za kategorizaciju:
     * Težina zadataka
     * Tipovi zadataka
     * Razredi
   - Meta Fields struktura:
     * ACF / Meta Box integracija
     * JSON schema za validaciju

B. API Layer:
   - REST API Endpoints:
     ```php
     register_rest_route('math-app/v1', '/exercises', [
       'methods' => 'GET',
       'callback' => 'get_exercises_callback',
       'permission_callback' => 'check_permissions'
     ]);
     ```
   - Custom Endpoints za:
     * Dohvat zadataka
     * Spremanje rezultata
     * User progress
     * Statistike

C. Sigurnosni Layer:
   - Authentication:
     * JWT implementacija ako potrebno
     * Cookie-based auth
     * Role-based pristup
   - Data Sanitization:
     ```php
     // Primjer sanitizacije
     $clean_data = array_map(function($item) {
       return [
         'title' => sanitize_text_field($item['title']),
         'content' => wp_kses_post($item['content'])
       ];
     }, $raw_data);
     ```

3. DATABASE OPTIMIZACIJA:
- Custom tablice ako je potrebno:
  ```sql
  CREATE TABLE IF NOT EXISTS `${prefix}_math_results` (
    id bigint(20) NOT NULL AUTO_INCREMENT,
    user_id bigint(20) NOT NULL,
    exercise_id bigint(20) NOT NULL,
    score int(11) NOT NULL,
    time_spent int(11) NOT NULL,
    created_at datetime DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    KEY user_id (user_id),
    KEY exercise_id (exercise_id)
  )

Zaključak prije nego što krenemo:OBAVEZNO! 
  Započnimo razgovor obavezno na hrvatskome jeziju.
  Aplikacija treba funcionirati i izgledati kao orginal,a to su dukumenti u ovome folderu.
  Predložak izradi u page-templates
  Ukoliko ima potrebe za opciju printanja provjeri file print.txt
  Prije nego si gotov : Provjeri dali koristiš predložak tj da si ga aktivirao i da si povezao sve što treba
  nalazimo se u Windows okruženju 

  Kreni molim te sa integracijom aplikacije u OVOM! folderu  sa WordPressom